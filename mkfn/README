MKFN
==========

This program generates nextfb font files out of ttf outlines.
It uses stb_truetype.h. Build using ./build.sh mkfn

To control which glyphs to include in the generated font, especially
to reduce the size of the files, edit chars.h.  The build.sh script
shows how to use mkfn.

The height and width of the resulting font can be specified with the
-h and -w options.  Mkfn expects font paths as its final arguments;
these fonts are searched in the same order for the glyphs to put in
the resulting nextfb font.  The size and horizontal/vertical DPI of
each font may be specified after each font path as (without the
brackets):

  font.ttf:[SZ][hHDPI][vVDPI][rVADJ][cHADJ][bBOLD][aHINT]

in which SZ is the font size, HDPI/VDPI is the horizontal/vertical
DPI, HADJ/VADJ is the amount of horizontal/vertical position
adjustment, BOLD specifies if fonts should be emboldened by repeating
pixels, and HINT specifies if autohinting should be used.

You can specify more than one font into the mkfn command and it
will merge the missing glyphs from other fonts.

MKFN_BDF
==========

This program generates nextfb font files out of .bdf bitmaps.
Build using ./build.sh mkfn

Bitmaps are fixed in size so there are no parameters to this
program except input and output file in format:
mkfn_bdf in out

It's not possible to combine them with .ttf however you can
add extra glyphs to the .bdf files by hand provided that
the bounding boxes and pixel sizes are the same.

Generally, .bdf fonts end up being a lot more crisp and edged
since every character is created by hand, whereas .tff does
antialiasing and rasterization for arbitrary sizes and will
look round and blurry.
